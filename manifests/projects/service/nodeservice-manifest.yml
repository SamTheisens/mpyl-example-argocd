# This file was generated by MPyL. DO NOT EDIT DIRECTLY.
---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: This is a test container. For testing the MPL pipelines, not to be
      deployed anywhere.
  labels:
    name: nodeservice
    app.kubernetes.io/version: pr-9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nodeservice
    app.kubernetes.io/instance: nodeservice
    maintainers: MPyL
    maintainer: MPyL
    version: pr-9
    revision: 29747ea49945e3ddfa091eb8f2ebb03013275273
  name: nodeservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: nodeservice
      app.kubernetes.io/name: nodeservice
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: nodeservice
        app.kubernetes.io/version: pr-9
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nodeservice
        app.kubernetes.io/instance: nodeservice
        maintainers: MPyL
        maintainer: MPyL
        version: pr-9
        revision: 29747ea49945e3ddfa091eb8f2ebb03013275273
      name: nodeservice
    spec:
      containers:
      - env: []
        image: ghcr.io/samtheisens/nodeservice:pr-9
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 99
          httpGet:
            path: /health
            port: port-0
          periodSeconds: 30
          successThreshold: 0
          timeoutSeconds: 20
        name: service
        ports:
        - containerPort: 8081
          name: port-0
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 512Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: port-0
          initialDelaySeconds: 4
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 3
      serviceAccount: nodeservice
      serviceAccountName: nodeservice
---
# nodeservice-ingress-0-http
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  labels:
    name: nodeservice
    app.kubernetes.io/version: pr-9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nodeservice
    app.kubernetes.io/instance: nodeservice
    maintainers: MPyL
    maintainer: MPyL
    version: pr-9
    revision: 29747ea49945e3ddfa091eb8f2ebb03013275273
  name: nodeservice-ingress-0-http
spec:
  routes:
  - kind: Rule
    match: Host(`nodeservice-9.test.nl`)
    services:
    - name: nodeservice
      kind: Service
      port: 8081
    middlewares:
    - name: traefik-https-redirect@kubernetescrd
    - name: nodeservice-ingress-0-whitelist
  entryPoints:
  - web
---
# nodeservice-ingress-0-https
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  labels:
    name: nodeservice
    app.kubernetes.io/version: pr-9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nodeservice
    app.kubernetes.io/instance: nodeservice
    maintainers: MPyL
    maintainer: MPyL
    version: pr-9
    revision: 29747ea49945e3ddfa091eb8f2ebb03013275273
  name: nodeservice-ingress-0-https
spec:
  routes:
  - kind: Rule
    match: Host(`nodeservice-9.test.nl`)
    services:
    - name: nodeservice
      kind: Service
      port: 8081
    middlewares:
    - name: nodeservice-ingress-0-whitelist
  entryPoints:
  - websecure
  tls:
    secretName: le-custom-prod-wildcard-cert
    options:
      name: insecure-ciphers
      namespace: traefik
---
# nodeservice-ingress-0-whitelist
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  annotations:
    VPN: 10.0.0.1
  labels:
    name: nodeservice
    app.kubernetes.io/version: pr-9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nodeservice
    app.kubernetes.io/instance: nodeservice
    maintainers: MPyL
    maintainer: MPyL
    version: pr-9
    revision: 29747ea49945e3ddfa091eb8f2ebb03013275273
  name: nodeservice-ingress-0-whitelist
spec:
  ipWhiteList:
    sourceRange:
    - 10.0.0.1
---
# nodeservice-ingress-1-http
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  labels:
    name: nodeservice
    app.kubernetes.io/version: pr-9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nodeservice
    app.kubernetes.io/instance: nodeservice
    maintainers: MPyL
    maintainer: MPyL
    version: pr-9
    revision: 29747ea49945e3ddfa091eb8f2ebb03013275273
  name: nodeservice-ingress-1-http
spec:
  routes:
  - kind: Rule
    match: Host(`some.other.host.com`)
    services:
    - name: nodeservice
      kind: Service
      port: 4091
    middlewares:
    - name: traefik-https-redirect@kubernetescrd
    - name: nodeservice-ingress-1-whitelist
    priority: 1000
  entryPoints:
  - web
---
# nodeservice-ingress-1-https
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  labels:
    name: nodeservice
    app.kubernetes.io/version: pr-9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nodeservice
    app.kubernetes.io/instance: nodeservice
    maintainers: MPyL
    maintainer: MPyL
    version: pr-9
    revision: 29747ea49945e3ddfa091eb8f2ebb03013275273
  name: nodeservice-ingress-1-https
spec:
  routes:
  - kind: Rule
    match: Host(`some.other.host.com`)
    services:
    - name: nodeservice
      kind: Service
      port: 4091
    middlewares:
    - name: nodeservice-ingress-1-whitelist
    priority: 1000
  entryPoints:
  - websecure
  tls:
    secretName: le-prod-wildcard-cert
---
# nodeservice-ingress-1-whitelist
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  annotations:
    VPN: 10.0.0.1
  labels:
    name: nodeservice
    app.kubernetes.io/version: pr-9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nodeservice
    app.kubernetes.io/instance: nodeservice
    maintainers: MPyL
    maintainer: MPyL
    version: pr-9
    revision: 29747ea49945e3ddfa091eb8f2ebb03013275273
  name: nodeservice-ingress-1-whitelist
spec:
  ipWhiteList:
    sourceRange:
    - 10.0.0.1
---
# service
apiVersion: v1
kind: Service
metadata:
  annotations:
    description: This is a test container. For testing the MPL pipelines, not to be
      deployed anywhere.
  labels:
    name: nodeservice
    app.kubernetes.io/version: pr-9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nodeservice
    app.kubernetes.io/instance: nodeservice
    maintainers: MPyL
    maintainer: MPyL
    version: pr-9
    revision: 29747ea49945e3ddfa091eb8f2ebb03013275273
  name: nodeservice
spec:
  ports:
  - name: 8081-webservice-port
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app.kubernetes.io/instance: nodeservice
    app.kubernetes.io/name: nodeservice
  type: ClusterIP
---
# service-account
apiVersion: v1
imagePullSecrets: []
kind: ServiceAccount
metadata:
  labels:
    name: nodeservice
    app.kubernetes.io/version: pr-9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nodeservice
    app.kubernetes.io/instance: nodeservice
    maintainers: MPyL
    maintainer: MPyL
    version: pr-9
    revision: 29747ea49945e3ddfa091eb8f2ebb03013275273
  name: nodeservice
